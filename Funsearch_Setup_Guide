NOTE: We do not own funsearch or any of the models used, please refer to Google's Deepmind Funsearch for the original project. This project aims to help the community getting more easier access by expanding on top of the original funsearch. 
Added functionalities:
- LLM that is interchangable, note here that not all LLM work, but the ones we tested are in the files.  
- Altered sandbox to get easier access to in and output 
- eval.txt that shows which prompts/response combination lead to which result and if the result passed.
- Way to plot data

This document explains how to setup the funsearch environment to run locally on the pc in easy to follow steps. This is only tested on Ubuntu 22.04, this should only work on Linux and commands used are mentioned to help the process. The commands used or any notes are mentioned in curly brackets '()'

Prerequirements: 
- Git for cloning the repository
- Decent hardware as even smaller models are quite memory intensive (Segmentation faults can happen)
- Anaconda 
- Make sure your system is up to date (sudo apt update, sudo apt upgrade -y)
- Make sure the path in your folder is not having any spaces such as ' ' in the name, this will crash the program. Solutions: Changing spaces to _ or fixing the path in the code

Step 1 (Gathering repository and installing dependencies): 
- Git clone 'Repository (link)'
- Open terminal in the folder of the repo and create conda environment with: 'conda create -n myenv python=3.11' (you can rename myenv)
- Conda activate myenv 
- pip install -r requirements.txt

Step 2 (Installing Docker)
- Install packages to allow apt to use repository over HTTPS: (sudo apt install apt-transport-https ca-certificates curl software-properties-common -y)
- Get last dockers official gpg key (curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -)
- Set up table repository (sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable")
- Install docker community edition (sudo apt update, sudo apt install docker-ce -y) 

Optional: 
Verify if docker is working correctly by running (sudo docker run hello-world)
Executing docker without sudo (sudo usermod -aG docker ${USER})

Step 3 (Creating Sandbox Docker Image)
- Change the topline of the dockerfile in the open_funsearch folder to your python version
- Installing the funsearch_sandbox docker, open terminal in de open_funsearch folder and run (sudo docker build -t funsearch_sandbox .)


Step 4 (Choosing and downloading LLM) NOTE: The specific results of LLM differ wildly and will have an enormous impact on the results of the method. For more information please read the original paper of Deepmind, within our capabilities of testing we noticed huge differences between some 8b and 13b models (to little resources for running any higher than that)
- Choose and download a LLM of huggingface (.gguf extension)
- Place the downloaded llm in the open_funsearch folder 
Note: Tested LLMs are commented in the run_funsearch.py

Step 5 (Running Funsearch)
- Alter run_funsearch.py to the exact model as downloaded and saved in the folder. 
- open terminal in the location and run (Python3 run_funsearch.py)

Optional:
- Specific settings can be altered through this file, but you can also run funsearch on other methods not specified in this setup guide. The goal of this guide is to get started on funsearch in a more open and easily accessible way, not to be an in-depth guide on all endless possibilites.

When running funsearch:
last_eval.txt generates output: 
- Runs that passed start with RUNS_OK = True and show the evaluated score as TEST OUTPUT = Value

Common errors: 
- Core dumped (Segmentation Fault) --> most likely due to out of memory (on GPU), solution: find a smaller model or reduce gpu layers in main.py 
- Sandbox not found --> There can  be issues depending on the system with ' ' in the absolute filepath. Try to move the project to a place without spaces in the file path. 
